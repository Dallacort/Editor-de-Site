// Script de teste para verificar o HARDEM Editor
// Execute no console do navegador: copy(testEditor.js) e cole

console.log('üß™ Teste do HARDEM Editor iniciado...');

// 1. Verificar se o editor existe
if (window.hardemEditor) {
    console.log('‚úÖ Editor encontrado:', window.hardemEditor);
} else {
    console.log('‚ùå Editor n√£o encontrado!');
    return;
}

// 2. Testar modo de edi√ß√£o
const toggleBtn = document.getElementById('hardem-toggle-edit');
if (toggleBtn) {
    console.log('‚úÖ Bot√£o toggle encontrado');
    console.log('Estado atual:', window.hardemEditor.editMode ? 'ATIVO' : 'INATIVO');
} else {
    console.log('‚ùå Bot√£o toggle n√£o encontrado!');
}

// 3. Verificar elementos edit√°veis se modo estiver ativo
if (window.hardemEditor.editMode) {
    const editableElements = document.querySelectorAll('.hardem-editable-element');
    console.log(`‚úÖ ${editableElements.length} elementos edit√°veis encontrados`);
    
    // Testar primeiro elemento
    if (editableElements.length > 0) {
        const firstElement = editableElements[0];
        console.log('Primeiro elemento edit√°vel:', firstElement);
        console.log('Data-key:', firstElement.getAttribute('data-key'));
        console.log('Conte√∫do:', firstElement.textContent.slice(0, 50) + '...');
    }
} else {
    console.log('‚ö†Ô∏è Modo de edi√ß√£o n√£o est√° ativo. Ative primeiro.');
}

// 4. Verificar carross√©is e slides
const swipers = document.querySelectorAll('.swiper');
console.log(`üé† ${swipers.length} carross√©is encontrados`);

swipers.forEach((swiper, index) => {
    const slides = swiper.querySelectorAll('.swiper-slide');
    console.log(`  Carrossel ${index + 1}: ${slides.length} slides`);
    
    slides.forEach((slide, slideIndex) => {
        const slideElements = slide.querySelectorAll('[data-key]');
        console.log(`    Slide ${slideIndex + 1}: ${slideElements.length} elementos edit√°veis`);
    });
});

// 5. Verificar localStorage
const saved = localStorage.getItem('siteContent');
if (saved) {
    try {
        const parsed = JSON.parse(saved);
        console.log(`üíæ ${Object.keys(parsed).length} itens salvos no localStorage`);
    } catch (e) {
        console.log('‚ùå Dados do localStorage corrompidos');
    }
} else {
    console.log('üì≠ Nenhum dado salvo no localStorage');
}

console.log('üß™ Teste conclu√≠do!');

// Fun√ß√£o helper para ativar edi√ß√£o automaticamente
window.testEditMode = function() {
    if (!window.hardemEditor.editMode) {
        document.getElementById('hardem-toggle-edit').click();
        setTimeout(() => {
            console.log('‚úÖ Modo de edi√ß√£o ativado automaticamente!');
            const editableElements = document.querySelectorAll('.hardem-editable-element');
            console.log(`üéØ ${editableElements.length} elementos agora edit√°veis`);
        }, 1000);
    }
};

// Fun√ß√£o helper para testar slide espec√≠fico
window.testSlide = function(slideIndex = 0) {
    const slides = document.querySelectorAll('.swiper-slide');
    if (slides[slideIndex]) {
        console.log(`üß© Testando slide ${slideIndex}:`, slides[slideIndex]);
        if (window.hardemEditor.editMode) {
            slides[slideIndex].click();
            console.log('Slide clicado! Verifique o painel lateral.');
        } else {
            console.log('‚ö†Ô∏è Ative o modo de edi√ß√£o primeiro.');
        }
    } else {
        console.log(`‚ùå Slide ${slideIndex} n√£o encontrado.`);
    }
}; 